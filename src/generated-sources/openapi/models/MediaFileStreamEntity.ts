/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MediaFileEntity } from './MediaFileEntity';
import {
    MediaFileEntityFromJSON,
    MediaFileEntityFromJSONTyped,
    MediaFileEntityToJSON,
} from './MediaFileEntity';

/**
 * 
 * @export
 * @interface MediaFileStreamEntity
 */
export interface MediaFileStreamEntity {
    /**
     * 
     * @type {string}
     * @memberof MediaFileStreamEntity
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof MediaFileStreamEntity
     */
    dateCreated?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MediaFileStreamEntity
     */
    dateUpdated?: Date;
    /**
     * 
     * @type {MediaFileEntity}
     * @memberof MediaFileStreamEntity
     */
    mediaFileEntity?: MediaFileEntity;
    /**
     * 
     * @type {number}
     * @memberof MediaFileStreamEntity
     */
    streamIndex?: number;
    /**
     * 
     * @type {string}
     * @memberof MediaFileStreamEntity
     */
    codecName?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaFileStreamEntity
     */
    codecType?: MediaFileStreamEntityCodecTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof MediaFileStreamEntity
     */
    width?: number;
    /**
     * 
     * @type {number}
     * @memberof MediaFileStreamEntity
     */
    height?: number;
    /**
     * 
     * @type {string}
     * @memberof MediaFileStreamEntity
     */
    path?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaFileStreamEntity
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof MediaFileStreamEntity
     */
    title?: string;
}


/**
 * @export
 */
export const MediaFileStreamEntityCodecTypeEnum = {
    Video: 'VIDEO',
    Audio: 'AUDIO',
    Subtitle: 'SUBTITLE',
    ExternalSubtitle: 'EXTERNAL_SUBTITLE',
    VideoNotPicture: 'VIDEO_NOT_PICTURE',
    Data: 'DATA',
    Attachment: 'ATTACHMENT',
    Unknown: 'UNKNOWN'
} as const;
export type MediaFileStreamEntityCodecTypeEnum = typeof MediaFileStreamEntityCodecTypeEnum[keyof typeof MediaFileStreamEntityCodecTypeEnum];


/**
 * Check if a given object implements the MediaFileStreamEntity interface.
 */
export function instanceOfMediaFileStreamEntity(value: object): boolean {
    return true;
}

export function MediaFileStreamEntityFromJSON(json: any): MediaFileStreamEntity {
    return MediaFileStreamEntityFromJSONTyped(json, false);
}

export function MediaFileStreamEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaFileStreamEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'dateCreated': json['dateCreated'] == null ? undefined : (new Date(json['dateCreated'])),
        'dateUpdated': json['dateUpdated'] == null ? undefined : (new Date(json['dateUpdated'])),
        'mediaFileEntity': json['mediaFileEntity'] == null ? undefined : MediaFileEntityFromJSON(json['mediaFileEntity']),
        'streamIndex': json['streamIndex'] == null ? undefined : json['streamIndex'],
        'codecName': json['codecName'] == null ? undefined : json['codecName'],
        'codecType': json['codecType'] == null ? undefined : json['codecType'],
        'width': json['width'] == null ? undefined : json['width'],
        'height': json['height'] == null ? undefined : json['height'],
        'path': json['path'] == null ? undefined : json['path'],
        'language': json['language'] == null ? undefined : json['language'],
        'title': json['title'] == null ? undefined : json['title'],
    };
}

export function MediaFileStreamEntityToJSON(value?: MediaFileStreamEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'dateCreated': value['dateCreated'] == null ? undefined : ((value['dateCreated']).toISOString()),
        'dateUpdated': value['dateUpdated'] == null ? undefined : ((value['dateUpdated']).toISOString()),
        'mediaFileEntity': MediaFileEntityToJSON(value['mediaFileEntity']),
        'streamIndex': value['streamIndex'],
        'codecName': value['codecName'],
        'codecType': value['codecType'],
        'width': value['width'],
        'height': value['height'],
        'path': value['path'],
        'language': value['language'],
        'title': value['title'],
    };
}

