/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CategorieEntity } from './CategorieEntity';
import {
    CategorieEntityFromJSON,
    CategorieEntityFromJSONTyped,
    CategorieEntityToJSON,
} from './CategorieEntity';

/**
 * 
 * @export
 * @interface TVShow
 */
export interface TVShow {
    /**
     * 
     * @type {string}
     * @memberof TVShow
     */
    id?: string;
    /**
     * 
     * @type {CategorieEntity}
     * @memberof TVShow
     */
    categorieEntity?: CategorieEntity;
    /**
     * 
     * @type {string}
     * @memberof TVShow
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof TVShow
     */
    releaseYear?: number;
}

/**
 * Check if a given object implements the TVShow interface.
 */
export function instanceOfTVShow(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TVShowFromJSON(json: any): TVShow {
    return TVShowFromJSONTyped(json, false);
}

export function TVShowFromJSONTyped(json: any, ignoreDiscriminator: boolean): TVShow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'categorieEntity': !exists(json, 'categorieEntity') ? undefined : CategorieEntityFromJSON(json['categorieEntity']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'releaseYear': !exists(json, 'releaseYear') ? undefined : json['releaseYear'],
    };
}

export function TVShowToJSON(value?: TVShow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'categorieEntity': CategorieEntityToJSON(value.categorieEntity),
        'name': value.name,
        'releaseYear': value.releaseYear,
    };
}

