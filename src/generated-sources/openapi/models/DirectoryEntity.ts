/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LibraryEntity } from './LibraryEntity';
import {
    LibraryEntityFromJSON,
    LibraryEntityFromJSONTyped,
    LibraryEntityToJSON,
} from './LibraryEntity';
import type { NodeEntity } from './NodeEntity';
import {
    NodeEntityFromJSON,
    NodeEntityFromJSONTyped,
    NodeEntityToJSON,
} from './NodeEntity';

/**
 * 
 * @export
 * @interface DirectoryEntity
 */
export interface DirectoryEntity {
    /**
     * 
     * @type {string}
     * @memberof DirectoryEntity
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof DirectoryEntity
     */
    dateCreated?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DirectoryEntity
     */
    dateUpdated?: Date;
    /**
     * 
     * @type {NodeEntity}
     * @memberof DirectoryEntity
     */
    nodeEntity?: NodeEntity;
    /**
     * 
     * @type {LibraryEntity}
     * @memberof DirectoryEntity
     */
    libraryEntity?: LibraryEntity;
    /**
     * 
     * @type {string}
     * @memberof DirectoryEntity
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof DirectoryEntity
     */
    path?: string;
    /**
     * 
     * @type {string}
     * @memberof DirectoryEntity
     */
    directoryType?: DirectoryEntityDirectoryTypeEnum;
}


/**
 * @export
 */
export const DirectoryEntityDirectoryTypeEnum = {
    Library: 'LIBRARY',
    Cache: 'CACHE'
} as const;
export type DirectoryEntityDirectoryTypeEnum = typeof DirectoryEntityDirectoryTypeEnum[keyof typeof DirectoryEntityDirectoryTypeEnum];


/**
 * Check if a given object implements the DirectoryEntity interface.
 */
export function instanceOfDirectoryEntity(value: object): boolean {
    return true;
}

export function DirectoryEntityFromJSON(json: any): DirectoryEntity {
    return DirectoryEntityFromJSONTyped(json, false);
}

export function DirectoryEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): DirectoryEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'dateCreated': json['dateCreated'] == null ? undefined : (new Date(json['dateCreated'])),
        'dateUpdated': json['dateUpdated'] == null ? undefined : (new Date(json['dateUpdated'])),
        'nodeEntity': json['nodeEntity'] == null ? undefined : NodeEntityFromJSON(json['nodeEntity']),
        'libraryEntity': json['libraryEntity'] == null ? undefined : LibraryEntityFromJSON(json['libraryEntity']),
        'name': json['name'] == null ? undefined : json['name'],
        'path': json['path'] == null ? undefined : json['path'],
        'directoryType': json['directoryType'] == null ? undefined : json['directoryType'],
    };
}

export function DirectoryEntityToJSON(value?: DirectoryEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'dateCreated': value['dateCreated'] == null ? undefined : ((value['dateCreated']).toISOString()),
        'dateUpdated': value['dateUpdated'] == null ? undefined : ((value['dateUpdated']).toISOString()),
        'nodeEntity': NodeEntityToJSON(value['nodeEntity']),
        'libraryEntity': LibraryEntityToJSON(value['libraryEntity']),
        'name': value['name'],
        'path': value['path'],
        'directoryType': value['directoryType'],
    };
}

