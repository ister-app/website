/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DirectoryEntity } from './DirectoryEntity';
import {
    DirectoryEntityFromJSON,
    DirectoryEntityFromJSONTyped,
    DirectoryEntityToJSON,
} from './DirectoryEntity';
import type { EpisodeEntity } from './EpisodeEntity';
import {
    EpisodeEntityFromJSON,
    EpisodeEntityFromJSONTyped,
    EpisodeEntityToJSON,
} from './EpisodeEntity';
import type { SeasonEntity } from './SeasonEntity';
import {
    SeasonEntityFromJSON,
    SeasonEntityFromJSONTyped,
    SeasonEntityToJSON,
} from './SeasonEntity';
import type { ShowEntity } from './ShowEntity';
import {
    ShowEntityFromJSON,
    ShowEntityFromJSONTyped,
    ShowEntityToJSON,
} from './ShowEntity';

/**
 * 
 * @export
 * @interface ImageEntity
 */
export interface ImageEntity {
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof ImageEntity
     */
    dateCreated?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ImageEntity
     */
    dateUpdated?: Date;
    /**
     * 
     * @type {DirectoryEntity}
     * @memberof ImageEntity
     */
    directoryEntity?: DirectoryEntity;
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    path?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    type?: ImageEntityTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageEntity
     */
    sourceUri?: string;
    /**
     * 
     * @type {ShowEntity}
     * @memberof ImageEntity
     */
    showEntity?: ShowEntity;
    /**
     * 
     * @type {SeasonEntity}
     * @memberof ImageEntity
     */
    seasonEntity?: SeasonEntity;
    /**
     * 
     * @type {EpisodeEntity}
     * @memberof ImageEntity
     */
    episodeEntity?: EpisodeEntity;
}


/**
 * @export
 */
export const ImageEntityTypeEnum = {
    Cover: 'COVER',
    Background: 'BACKGROUND',
    Unknown: 'UNKNOWN'
} as const;
export type ImageEntityTypeEnum = typeof ImageEntityTypeEnum[keyof typeof ImageEntityTypeEnum];


/**
 * Check if a given object implements the ImageEntity interface.
 */
export function instanceOfImageEntity(value: object): boolean {
    return true;
}

export function ImageEntityFromJSON(json: any): ImageEntity {
    return ImageEntityFromJSONTyped(json, false);
}

export function ImageEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'dateCreated': json['dateCreated'] == null ? undefined : (new Date(json['dateCreated'])),
        'dateUpdated': json['dateUpdated'] == null ? undefined : (new Date(json['dateUpdated'])),
        'directoryEntity': json['directoryEntity'] == null ? undefined : DirectoryEntityFromJSON(json['directoryEntity']),
        'path': json['path'] == null ? undefined : json['path'],
        'type': json['type'] == null ? undefined : json['type'],
        'language': json['language'] == null ? undefined : json['language'],
        'sourceUri': json['sourceUri'] == null ? undefined : json['sourceUri'],
        'showEntity': json['showEntity'] == null ? undefined : ShowEntityFromJSON(json['showEntity']),
        'seasonEntity': json['seasonEntity'] == null ? undefined : SeasonEntityFromJSON(json['seasonEntity']),
        'episodeEntity': json['episodeEntity'] == null ? undefined : EpisodeEntityFromJSON(json['episodeEntity']),
    };
}

export function ImageEntityToJSON(value?: ImageEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'dateCreated': value['dateCreated'] == null ? undefined : ((value['dateCreated']).toISOString()),
        'dateUpdated': value['dateUpdated'] == null ? undefined : ((value['dateUpdated']).toISOString()),
        'directoryEntity': DirectoryEntityToJSON(value['directoryEntity']),
        'path': value['path'],
        'type': value['type'],
        'language': value['language'],
        'sourceUri': value['sourceUri'],
        'showEntity': ShowEntityToJSON(value['showEntity']),
        'seasonEntity': SeasonEntityToJSON(value['seasonEntity']),
        'episodeEntity': EpisodeEntityToJSON(value['episodeEntity']),
    };
}

