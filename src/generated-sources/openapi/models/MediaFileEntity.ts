/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DirectoryEntity } from './DirectoryEntity';
import {
    DirectoryEntityFromJSON,
    DirectoryEntityFromJSONTyped,
    DirectoryEntityToJSON,
} from './DirectoryEntity';
import type { EpisodeEntity } from './EpisodeEntity';
import {
    EpisodeEntityFromJSON,
    EpisodeEntityFromJSONTyped,
    EpisodeEntityToJSON,
} from './EpisodeEntity';
import type { MediaFileStreamEntity } from './MediaFileStreamEntity';
import {
    MediaFileStreamEntityFromJSON,
    MediaFileStreamEntityFromJSONTyped,
    MediaFileStreamEntityToJSON,
} from './MediaFileStreamEntity';

/**
 * 
 * @export
 * @interface MediaFileEntity
 */
export interface MediaFileEntity {
    /**
     * 
     * @type {string}
     * @memberof MediaFileEntity
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof MediaFileEntity
     */
    dateCreated?: Date;
    /**
     * 
     * @type {Date}
     * @memberof MediaFileEntity
     */
    dateUpdated?: Date;
    /**
     * 
     * @type {DirectoryEntity}
     * @memberof MediaFileEntity
     */
    directoryEntity?: DirectoryEntity;
    /**
     * 
     * @type {EpisodeEntity}
     * @memberof MediaFileEntity
     */
    episodeEntity?: EpisodeEntity;
    /**
     * 
     * @type {Array<MediaFileStreamEntity>}
     * @memberof MediaFileEntity
     */
    mediaFileStreamEntity?: Array<MediaFileStreamEntity>;
    /**
     * 
     * @type {string}
     * @memberof MediaFileEntity
     */
    path?: string;
    /**
     * 
     * @type {number}
     * @memberof MediaFileEntity
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof MediaFileEntity
     */
    durationInMilliseconds?: number;
}

/**
 * Check if a given object implements the MediaFileEntity interface.
 */
export function instanceOfMediaFileEntity(value: object): boolean {
    return true;
}

export function MediaFileEntityFromJSON(json: any): MediaFileEntity {
    return MediaFileEntityFromJSONTyped(json, false);
}

export function MediaFileEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): MediaFileEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'dateCreated': json['dateCreated'] == null ? undefined : (new Date(json['dateCreated'])),
        'dateUpdated': json['dateUpdated'] == null ? undefined : (new Date(json['dateUpdated'])),
        'directoryEntity': json['directoryEntity'] == null ? undefined : DirectoryEntityFromJSON(json['directoryEntity']),
        'episodeEntity': json['episodeEntity'] == null ? undefined : EpisodeEntityFromJSON(json['episodeEntity']),
        'mediaFileStreamEntity': json['mediaFileStreamEntity'] == null ? undefined : ((json['mediaFileStreamEntity'] as Array<any>).map(MediaFileStreamEntityFromJSON)),
        'path': json['path'] == null ? undefined : json['path'],
        'size': json['size'] == null ? undefined : json['size'],
        'durationInMilliseconds': json['durationInMilliseconds'] == null ? undefined : json['durationInMilliseconds'],
    };
}

export function MediaFileEntityToJSON(value?: MediaFileEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'dateCreated': value['dateCreated'] == null ? undefined : ((value['dateCreated']).toISOString()),
        'dateUpdated': value['dateUpdated'] == null ? undefined : ((value['dateUpdated']).toISOString()),
        'directoryEntity': DirectoryEntityToJSON(value['directoryEntity']),
        'episodeEntity': EpisodeEntityToJSON(value['episodeEntity']),
        'mediaFileStreamEntity': value['mediaFileStreamEntity'] == null ? undefined : ((value['mediaFileStreamEntity'] as Array<any>).map(MediaFileStreamEntityToJSON)),
        'path': value['path'],
        'size': value['size'],
        'durationInMilliseconds': value['durationInMilliseconds'],
    };
}

