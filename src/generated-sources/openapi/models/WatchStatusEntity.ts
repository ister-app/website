/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EpisodeEntity } from './EpisodeEntity';
import {
    EpisodeEntityFromJSON,
    EpisodeEntityFromJSONTyped,
    EpisodeEntityToJSON,
} from './EpisodeEntity';
import type { UserEntity } from './UserEntity';
import {
    UserEntityFromJSON,
    UserEntityFromJSONTyped,
    UserEntityToJSON,
} from './UserEntity';

/**
 * 
 * @export
 * @interface WatchStatusEntity
 */
export interface WatchStatusEntity {
    /**
     * 
     * @type {string}
     * @memberof WatchStatusEntity
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof WatchStatusEntity
     */
    dateCreated: Date;
    /**
     * 
     * @type {Date}
     * @memberof WatchStatusEntity
     */
    dateUpdated: Date;
    /**
     * 
     * @type {string}
     * @memberof WatchStatusEntity
     */
    playQueueItemId: string;
    /**
     * 
     * @type {UserEntity}
     * @memberof WatchStatusEntity
     */
    userEntity: UserEntity;
    /**
     * 
     * @type {EpisodeEntity}
     * @memberof WatchStatusEntity
     */
    episodeEntity: EpisodeEntity;
    /**
     * 
     * @type {boolean}
     * @memberof WatchStatusEntity
     */
    watched: boolean;
    /**
     * 
     * @type {number}
     * @memberof WatchStatusEntity
     */
    progressInMilliseconds?: number;
}

/**
 * Check if a given object implements the WatchStatusEntity interface.
 */
export function instanceOfWatchStatusEntity(value: object): boolean {
    if (!('dateCreated' in value)) return false;
    if (!('dateUpdated' in value)) return false;
    if (!('playQueueItemId' in value)) return false;
    if (!('userEntity' in value)) return false;
    if (!('episodeEntity' in value)) return false;
    if (!('watched' in value)) return false;
    return true;
}

export function WatchStatusEntityFromJSON(json: any): WatchStatusEntity {
    return WatchStatusEntityFromJSONTyped(json, false);
}

export function WatchStatusEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): WatchStatusEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'dateCreated': (new Date(json['dateCreated'])),
        'dateUpdated': (new Date(json['dateUpdated'])),
        'playQueueItemId': json['playQueueItemId'],
        'userEntity': UserEntityFromJSON(json['userEntity']),
        'episodeEntity': EpisodeEntityFromJSON(json['episodeEntity']),
        'watched': json['watched'],
        'progressInMilliseconds': json['progressInMilliseconds'] == null ? undefined : json['progressInMilliseconds'],
    };
}

export function WatchStatusEntityToJSON(value?: WatchStatusEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'dateCreated': ((value['dateCreated']).toISOString()),
        'dateUpdated': ((value['dateUpdated']).toISOString()),
        'playQueueItemId': value['playQueueItemId'],
        'userEntity': UserEntityToJSON(value['userEntity']),
        'episodeEntity': EpisodeEntityToJSON(value['episodeEntity']),
        'watched': value['watched'],
        'progressInMilliseconds': value['progressInMilliseconds'],
    };
}

