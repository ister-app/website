/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageEntity } from './ImageEntity';
import {
    ImageEntityFromJSON,
    ImageEntityFromJSONTyped,
    ImageEntityToJSON,
} from './ImageEntity';
import type { MediaFileEntity } from './MediaFileEntity';
import {
    MediaFileEntityFromJSON,
    MediaFileEntityFromJSONTyped,
    MediaFileEntityToJSON,
} from './MediaFileEntity';
import type { MetadataEntity } from './MetadataEntity';
import {
    MetadataEntityFromJSON,
    MetadataEntityFromJSONTyped,
    MetadataEntityToJSON,
} from './MetadataEntity';
import type { SeasonEntity } from './SeasonEntity';
import {
    SeasonEntityFromJSON,
    SeasonEntityFromJSONTyped,
    SeasonEntityToJSON,
} from './SeasonEntity';
import type { ShowEntity } from './ShowEntity';
import {
    ShowEntityFromJSON,
    ShowEntityFromJSONTyped,
    ShowEntityToJSON,
} from './ShowEntity';
import type { WatchStatusEntity } from './WatchStatusEntity';
import {
    WatchStatusEntityFromJSON,
    WatchStatusEntityFromJSONTyped,
    WatchStatusEntityToJSON,
} from './WatchStatusEntity';

/**
 * 
 * @export
 * @interface EpisodeEntity
 */
export interface EpisodeEntity {
    /**
     * 
     * @type {string}
     * @memberof EpisodeEntity
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof EpisodeEntity
     */
    dateCreated: Date;
    /**
     * 
     * @type {Date}
     * @memberof EpisodeEntity
     */
    dateUpdated: Date;
    /**
     * 
     * @type {ShowEntity}
     * @memberof EpisodeEntity
     */
    showEntity: ShowEntity;
    /**
     * 
     * @type {SeasonEntity}
     * @memberof EpisodeEntity
     */
    seasonEntity: SeasonEntity;
    /**
     * 
     * @type {Array<MediaFileEntity>}
     * @memberof EpisodeEntity
     */
    mediaFileEntities?: Array<MediaFileEntity>;
    /**
     * 
     * @type {Array<ImageEntity>}
     * @memberof EpisodeEntity
     */
    imagesEntities?: Array<ImageEntity>;
    /**
     * 
     * @type {Array<MetadataEntity>}
     * @memberof EpisodeEntity
     */
    metadataEntities?: Array<MetadataEntity>;
    /**
     * 
     * @type {Array<WatchStatusEntity>}
     * @memberof EpisodeEntity
     */
    watchStatusEntities?: Array<WatchStatusEntity>;
    /**
     * 
     * @type {number}
     * @memberof EpisodeEntity
     */
    number: number;
}

/**
 * Check if a given object implements the EpisodeEntity interface.
 */
export function instanceOfEpisodeEntity(value: object): boolean {
    if (!('dateCreated' in value)) return false;
    if (!('dateUpdated' in value)) return false;
    if (!('showEntity' in value)) return false;
    if (!('seasonEntity' in value)) return false;
    if (!('number' in value)) return false;
    return true;
}

export function EpisodeEntityFromJSON(json: any): EpisodeEntity {
    return EpisodeEntityFromJSONTyped(json, false);
}

export function EpisodeEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): EpisodeEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'dateCreated': (new Date(json['dateCreated'])),
        'dateUpdated': (new Date(json['dateUpdated'])),
        'showEntity': ShowEntityFromJSON(json['showEntity']),
        'seasonEntity': SeasonEntityFromJSON(json['seasonEntity']),
        'mediaFileEntities': json['mediaFileEntities'] == null ? undefined : ((json['mediaFileEntities'] as Array<any>).map(MediaFileEntityFromJSON)),
        'imagesEntities': json['imagesEntities'] == null ? undefined : ((json['imagesEntities'] as Array<any>).map(ImageEntityFromJSON)),
        'metadataEntities': json['metadataEntities'] == null ? undefined : ((json['metadataEntities'] as Array<any>).map(MetadataEntityFromJSON)),
        'watchStatusEntities': json['watchStatusEntities'] == null ? undefined : ((json['watchStatusEntities'] as Array<any>).map(WatchStatusEntityFromJSON)),
        'number': json['number'],
    };
}

export function EpisodeEntityToJSON(value?: EpisodeEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'dateCreated': ((value['dateCreated']).toISOString()),
        'dateUpdated': ((value['dateUpdated']).toISOString()),
        'showEntity': ShowEntityToJSON(value['showEntity']),
        'seasonEntity': SeasonEntityToJSON(value['seasonEntity']),
        'mediaFileEntities': value['mediaFileEntities'] == null ? undefined : ((value['mediaFileEntities'] as Array<any>).map(MediaFileEntityToJSON)),
        'imagesEntities': value['imagesEntities'] == null ? undefined : ((value['imagesEntities'] as Array<any>).map(ImageEntityToJSON)),
        'metadataEntities': value['metadataEntities'] == null ? undefined : ((value['metadataEntities'] as Array<any>).map(MetadataEntityToJSON)),
        'watchStatusEntities': value['watchStatusEntities'] == null ? undefined : ((value['watchStatusEntities'] as Array<any>).map(WatchStatusEntityToJSON)),
        'number': value['number'],
    };
}

